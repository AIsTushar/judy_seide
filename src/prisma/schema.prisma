generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                      String    @id @default(auto()) @map("_id") @db.ObjectId
  name                    String
  email                   String    @unique
  imageUrl                String?
  password                String
  role                    Role      @default(USER)
  isVerified              Boolean   @default(false)
  resetToken              String?
  resetTokenExpiry        DateTime?
  verificationToken       String?
  verificationTokenExpiry DateTime?
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  Blog                    Blog[]

  @@map("users")
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String    @unique
  imageUrl  String
  published Boolean
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]

  @@map("categories")
}

model Material {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]

  @@map("materials")
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  price       Float
  description String
  imageUrl    String[]
  size        String
  quantity    Int
  tags        String[]
  materialId  String   @db.ObjectId
  categoryId  String   @db.ObjectId

  material Material @relation(fields: [materialId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("products")
}

model Blog {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  imageUrl  String?
  others    String?
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("blogs")
}

enum Role {
  USER
  ADMIN
}
